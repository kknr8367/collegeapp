/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HealthService as PrismaHealthService } from "@prisma/client";

export class HealthServiceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HealthServiceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.healthService.count(args);
  }

  async healthServices(
    args: Prisma.HealthServiceFindManyArgs
  ): Promise<PrismaHealthService[]> {
    return this.prisma.healthService.findMany(args);
  }
  async healthService(
    args: Prisma.HealthServiceFindUniqueArgs
  ): Promise<PrismaHealthService | null> {
    return this.prisma.healthService.findUnique(args);
  }
  async createHealthService(
    args: Prisma.HealthServiceCreateArgs
  ): Promise<PrismaHealthService> {
    return this.prisma.healthService.create(args);
  }
  async updateHealthService(
    args: Prisma.HealthServiceUpdateArgs
  ): Promise<PrismaHealthService> {
    return this.prisma.healthService.update(args);
  }
  async deleteHealthService(
    args: Prisma.HealthServiceDeleteArgs
  ): Promise<PrismaHealthService> {
    return this.prisma.healthService.delete(args);
  }
}
