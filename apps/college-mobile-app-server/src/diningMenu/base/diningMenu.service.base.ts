/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DiningMenu as PrismaDiningMenu } from "@prisma/client";

export class DiningMenuServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DiningMenuCountArgs, "select">
  ): Promise<number> {
    return this.prisma.diningMenu.count(args);
  }

  async diningMenus(
    args: Prisma.DiningMenuFindManyArgs
  ): Promise<PrismaDiningMenu[]> {
    return this.prisma.diningMenu.findMany(args);
  }
  async diningMenu(
    args: Prisma.DiningMenuFindUniqueArgs
  ): Promise<PrismaDiningMenu | null> {
    return this.prisma.diningMenu.findUnique(args);
  }
  async createDiningMenu(
    args: Prisma.DiningMenuCreateArgs
  ): Promise<PrismaDiningMenu> {
    return this.prisma.diningMenu.create(args);
  }
  async updateDiningMenu(
    args: Prisma.DiningMenuUpdateArgs
  ): Promise<PrismaDiningMenu> {
    return this.prisma.diningMenu.update(args);
  }
  async deleteDiningMenu(
    args: Prisma.DiningMenuDeleteArgs
  ): Promise<PrismaDiningMenu> {
    return this.prisma.diningMenu.delete(args);
  }
}
